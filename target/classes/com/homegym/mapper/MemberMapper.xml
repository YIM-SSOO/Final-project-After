<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="MemberDAO">
	<!-- <resultMap type="com.homegym.biz.member.MemberVO" id="memberMap"> <id 
		property="memberId" column="memberId"/> <result property="mID" column="mId"/> 
		<result property="memberId" column="memberId"/> <result property="password" 
		column="password"/> <result property="name" column="name"/> <result property="nickname" 
		column="nickname"/> <result property="phone" column="phone"/> <result property="zipCode" 
		column="zipCode"/> <result property="address" column="address"/> <result 
		property="image" column="image"/> <result property="birth" column="birth"/> 
		<result property="gender" column="gender"/> <result property="auth" column="auth"/> 
		<result property="enabled" column="enabled"/> </resultMap> -->

	<select id="loadUserByUsername"
		resultType="com.homegym.security.CustomUserDetails">
		Select memberId, password, name, nickname, phone, zipCode, address, image,
		birth, gender, enabled, auth from member WHERE memberId = #{memberId}
	</select>

	<select id="selectUserById"
		resultType="com.homegym.security.CustomUserDetails">
		Select memberId, password, name, nickname, phone, zipCode, address, image as
		imagePath, birth, gender, enabled, auth from member WHERE memberId =
		#{memberId}
	</select>

	<select id="getUserKakao"
		resultType="com.homegym.security.CustomUserDetails">
		Select * from member WHERE memberId = #{memberId}
	</select>

	<!-- 회원가입 쿼리 -->
	<insert id="memberJoin">
		insert into member(memberId, password, name, nickname, phone, zipCode,
		address, birth, gender, auth) values (#{memberId}, #{password},
		#{name}, #{nickname}, #{phone}, #{zipCode}, #{address}, #{birth},
		#{gender}, "ROLE_MEMBER");
	</insert>

	<!-- 카카오 회원가입 쿼리 -->
	<insert id="memberJoinKakao">
		insert into member(memberId, password, name, nickname, phone, zipCode,
		address, birth, gender, auth) values (#{memberId}, #{password},
		#{name}, #{nickname}, #{phone}, #{zipCode}, #{address}, #{birth},
		#{gender}, "ROLE_KAKAO");
	</insert>

	<!-- 회원가입 AUTH -->
	<!-- <insert id="insertMemberAuth"> insert into member_auth(memberId, auth) 
		values (#{memberId}, "ROLE_MEMBER"); </insert> -->

	<!-- 아이디 중복 체크 -->
	<select id="idCheck" parameterType="String" resultType="Integer">
		SELECT
		count(*) FROM member WHERE memberId = #{memberId}
	</select>

	<!-- 닉네임 중복 체크 -->
	<select id="nickCheck" parameterType="String"
		resultType="Integer">
		SELECT count(*) FROM member WHERE nickname = #{nickname}
	</select>

	<!-- 마이페이지 프로필 정보(활동내역 내가 쓴글 추가해야됨.) -->
	<select id="getInfo" resultType="authmember"
		parameterType="String">
		SELECT memberId,
		nickname,
		name,
		image as imagePath
		FROM member
		WHERE memberId= #{memberId}
	</select>

	<!-- 마이페이지 회원정보 수정 페이지 -->
	<select id="getMyPageInfo" resultType="authmember"
		parameterType="String">
		SELECT memberId,
		password,
		name,
		phone,
		zipCode,
		nickname,
		address,
		image as imagePath,
		birth,
		gender,
		auth
		FROM member
		WHERE memberId= #{memberId}

	</select>

	<!-- 회원정보 수정 처리 -->
	<update id="memberUpdate" parameterType="member">
		UPDATE member
		SET
		<choose>
			<!-- 새로운 비밀번호가 입력되었을때 -->
			<when test="newPassword != null  and newPassword != ''">
				password = #{newPassword},
			</when>
		</choose>
		nickname = #{nickname},
		zipCode = #{zipCode},
		phone = #{phone},
		address = #{address}
		WHERE
		memberId = #{memberId}
	</update>

	<!-- 마이페이지 프로필 이미지 등록 -->
	<update id="userImgUpload" parameterType="HashMap">
		UPDATE member
		SET
		IMAGE = #{imagePath}
		WHERE
		memberId=#{memberId}
	</update>

	<!-- 마이페이지 프로필 이미지 삭제 -->
	<update id="userImgDelete">
		UPDATE member
		SET
		IMAGE = ''
		WHERE
		memberId =#{memberId}
	</update>

	<!-- 회원 탈퇴 처리 -->
	<delete id="memberDelete" parameterType="member">
		DELETE
		FROM member
		WHERE
		memberId = #{memberId}
	</delete>

	<!-- 마이페이지 비밀번호 체크 -->
	<select id="checkPw" resultType="int">
		SELECT
		count(*)
		FROM member
		WHERE memberId = #{memberId} AND password = #{password}
	</select>

	<!--관리할 홈짐 갯수 -->
	<select id="getWaingHomegymCnt" resultType="int">
		SELECT
		count(*)
		FROM homegym_board b INNER JOIN homegym_detail d
		ON b.h_id = d.h_id
		WHERE memberId = #{memberId}

	</select>

	<!-- 내가 빌린 홈짐 갯수 -->
	<select id="getRentHomeGymCnt" resultType="int">
		SELECT
		count(*)
		FROM homegym_detail
		WHERE borrowerId= #{memberId}
	</select>

	<select id="getRealRentCnt" resultType="int">
		SELECT
		count(*)
		FROM homegym_detail
		WHERE borrowerId= #{memberId} AND agreeYN ='Y'
	</select>
	<!-- 내가 빌려준 홈짐 갯수 -->
	<select id="getLendHomeGymCnt" resultType="int">
		SELECT
		count(*)
		FROM homegym_board
		WHERE memberId=#{memberId}
	</select>

	<!-- 내가 쓴 댓글 갯수 -->
	<select id="getMyAllReviewCnt" resultType="int">
		SELECT
		count(*)
		FROM homegym_review
		WHERE borrowerId = #{memberId}
	</select>

	<!-- 내가 작성한 게시글 갯수 -->
	<select id="getMyAllBoardCnt" resultType="int">
		SELECT
		count(*)
		FROM trainer_board
		WHERE memberId=#{memberId}
	</select>


	<!-- 결제 여부 변경 -->
	<update id="payUpdate" parameterType="homegymDetail">
		UPDATE
		homegym_detail
		SET
		payYN = #{payYN}
		WHERE
		d_id = #{dId}
	</update>

	<!-- 홈짐 수락 -->
	<update id="HomegymAcceptUpdate" parameterType="HashMap">
		UPDATE
		homegym_detail
		SET
		agreeYN = #{status}
		WHERE
		d_id = #{dId}
	</update>

	<!-- 홈짐 거절 -->
	<update id="HomegymRejectUpdate" parameterType="HashMap">
		UPDATE
		homegym_detail
		SET
		agreeYN = #{status},
		reject_reason = #{rejectReason}
		WHERE
		d_id = #{dId}
	</update>

	<!-- 활동내역 수락한 홈짐 리스트 페이징 -->
	<select id="getHomegymWithPaging" resultType="homegymVO">
  	<![CDATA[
  		SELECT *
  		FROM (
  				SELECT *
				FROM homegym_board 
				WHERE memberId = #{memberId}
					AND status = 'ready'
				ORDER BY h_id desc
			)as h1
  		LIMIT #{cri.skip},#{cri.amount}
  				
  ]]>

	</select>



	<!-- 홈짐 관리 리스트 페이징 -->
	<select id="getWaitingHGPaging" resultType="hashMap">
	<![CDATA[
		SELECT *
		FROM (
				SELECT b.h_title,b.h_addr,d.rental_date, d.d_id,d.agreeYN
				FROM homegym_board b INNER JOIN homegym_detail d
				ON b.h_id = d.h_id
                WHERE memberId = #{memberId}
                ORDER BY d.d_id DESC
			)as wh
		LIMIT #{cri.skip}, #{cri.amount}
	]]>
	</select>


	<!-- 빌려준 홈짐 리스트 페이징 -->
	<select id="getLendHGPaging" resultType="HashMap">
	<![CDATA[
	  		SELECT *
			FROM (
				 SELECT
				 	 b.h_title,
					 b.h_addr,
					 b.h_regdate,
					 b.h_id,
					 min(f.uuid) as uuid,
					 min(f.fileName) as fileName,
					 max(f.uploadPath) as uploadPath
				FROM homegym_board b INNER JOIN homegym_attach f
					ON b.h_id = f.h_id
				WHERE memberId= #{memberId}
					GROUP BY b.h_title, b.h_addr, b.h_regdate, b.h_id
					ORDER BY b.h_regdate DESC
				)as lh
	  		LIMIT #{cri.skip}, #{cri.amount}
 		 ]]>
	</select>

	<!-- 빌린 홈짐 리스트 페이징 -->
	<select id="getRentdHGPaging" resultType="HashMap">
	  	<![CDATA[
	  		SELECT *
	  		FROM (
	  			 SELECT b.h_id, b.h_price, b.h_title,b.h_addr,d.rental_date,
		  				d.agreeYN, d.payYN, d.d_id, d.phoneNum,d.reject_reason,
	                    min(f.uuid) as uuid,
						min(f.fileName) as fileName,
						max(f.uploadPath) as uploadPath
					FROM homegym_board b INNER JOIN homegym_detail d
						ON b.h_id = d.h_id
					INNER JOIN homegym_attach f ON b.h_id = f.h_id
					WHERE borrowerId= #{memberId}
					GROUP BY b.h_id, b.h_price, b.h_title,b.h_addr,d.rental_date,
		  				d.agreeYN, d.payYN, d.d_id, d.phoneNum
					ORDER BY d.d_id DESC
				)as rh
	  		LIMIT #{cri.skip}, #{cri.amount}
 		 ]]>
	</select>

	<!-- 내가 쓴 게시물 목록 -->
	<select id="getMyBoardPaging" resultType="trainer">
		<![CDATA[
		SELECT *
		FROM (
				SELECT *
				FROM trainer_board
				WHERE memberId = #{memberId}
				ORDER BY tno desc
				)as tb
  		LIMIT #{cri.skip}, #{cri.amount}
  		]]>
	</select>

	<!-- 내가 쓴 리뷰 리스트 조회 -->
	<select id="getMyReviewsPaging" resultType="HashMap">
	<![CDATA[
	SELECT *
		FROM( 
			SELECT hb.h_title,hr.hr_content,hr.hr_score,hr.hr_regdate,hr.h_id
			FROM homegym_board hb INNER JOIN homegym_review hr
			ON hb.h_id = hr.h_id
			WHERE borrowerId= #{memberId}
			ORDER BY hr_regdate DESC
		)as rv
		LIMIT #{cri.skip}, #{cri.amount}
		]]>
	</select>

	<!-- 요청 홈짐예약 폼 조회 -->
	<select id="getMyRequest"
		resultType="com.homegym.biz.homegym.HomegymDetailVO">
		SELECT *
		FROM homegym_detail
		WHERE d_id = #{dId}

	</select>

</mapper>